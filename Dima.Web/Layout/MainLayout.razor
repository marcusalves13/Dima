@inherits LayoutComponentBase

<MudThemeProvider @ref="_mudThemeProvider" @bind-IsDarkMode="_IsDarkMode" Theme="Configuration.Theme" />
<MudSnackbarProvider />
<AuthorizeView>
    <Authorized>
        <MudLayout>
            <MudAppBar>
                <MudIconButton Icon="@Icons.Material.Filled.Menu"
                               Color="Color.Inherit"
                               Edge="Edge.Start"
                               OnClick="ToggleDrawer" />
                Dima
                <MudSpacer />
                <MudText Typo="Typo.caption">
                    @context.User.Identity?.Name
                </MudText>
                <MudSwitch Color="Color.Inherit" Class="ma-4" @bind-Value="_IsDarkMode" T="bool" ThumbIcon="@Icons.Material.TwoTone.Lightbulb"></MudSwitch>
            </MudAppBar>
            <MudDrawer @bind-Open="@_IsDrawerOpened">
                <h1>teste</h1>
            </MudDrawer>
            <MudMainContent>
                <MudContainer>
                    @Body
                </MudContainer>
            </MudMainContent>
        </MudLayout>
    </Authorized>
    <NotAuthorized>
        <LoginRedirect></LoginRedirect>
    </NotAuthorized>
</AuthorizeView>


@code{
    private bool _IsDrawerOpened = true;
    private bool _IsDarkMode = true;
    private MudThemeProvider _mudThemeProvider = null!;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _IsDarkMode = await _mudThemeProvider.GetSystemPreference();
            await _mudThemeProvider.WatchSystemPreference(OnSystemPreferenceChanged);
            StateHasChanged();
        }
    }

    private Task OnSystemPreferenceChanged(bool newValue)
    {
        _IsDarkMode = newValue;
        StateHasChanged();
        return Task.CompletedTask;
    }

    private void ToggleDrawer()
    {
        _IsDrawerOpened = !_IsDrawerOpened;
    }
}
